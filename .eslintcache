[{"C:\\Users\\Usuario\\React\\Project_AWUG2\\project_awug2\\src\\index.js":"1","C:\\Users\\Usuario\\React\\Project_AWUG2\\project_awug2\\src\\reportWebVitals.js":"2","C:\\Users\\Usuario\\React\\Project_AWUG2\\project_awug2\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":15317,"mtime":1610908287971,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1yo34l9",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\Usuario\\React\\Project_AWUG2\\project_awug2\\src\\index.js",[],["16","17"],"C:\\Users\\Usuario\\React\\Project_AWUG2\\project_awug2\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\React\\Project_AWUG2\\project_awug2\\src\\App.js",["18","19","20","21","22","23","24","25","26","27"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  const [query, setQuery] = useState('');\r\n\r\n  const searchMovies = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //const query=\"hola\";\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=f37c16e288bd47f8c2026f6fdc704e57&language=en-US&query=${query}`;\r\n    //const url = \"https://api.themoviedb.org/3/trending/movie/week?api_key=f37c16e288bd47f8c2026f6fdc704e57&page=1\";\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n    } catch (er) {\r\n      console.log(er);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Router>\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n\r\n          <a class=\"navbar-brand navbar-fontstyle cursor\" href=\"/\">\r\n            <img src={logo} height=\"60\" className=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\" ></img>\r\n\r\n          </a>\r\n\r\n          <form className=\"form-inline\" onSubmit={searchMovies}>\r\n\r\n            <input class=\"form-control mr-sm-2 navbar-form\" type=\"search\" aria-label=\"Search\" id=\"movieSearch\" name=\"query\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Search a movie\"></input>\r\n            \r\n              <a class=\"btn btn-outline-info my-2 my-sm-0 navbar-form searchButton\" type=\"button\" value=\"Search\" href={'/movieSearch/' + query}>Search</a>\r\n            \r\n\r\n          </form>\r\n\r\n        </nav>\r\n\r\n        <Route exact path=\"/\" component={MovieList} />\r\n        <Route exact path=\"/movieSearch/:query\" component={MovieSearch} />\r\n        <Route exact path=\"/movie/:movieID\" component={MovieDetails} />\r\n\r\n\r\n      </Router>\r\n      <footer className=\"footer mt-auto py-3 bg-dark displayBlock\">\r\n        <div className=\"container\">\r\n          <span className=\"text-muted footerText\">Àlex Burdoy, Josep Vílchez i Martí Peña</span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\nclass MovieList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movies: [],\r\n      page: 1,\r\n\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.makeHttpRequestWithPage(1);\r\n    /*fetch(\"https://api.themoviedb.org/3/trending/movie/week?api_key=f37c16e288bd47f8c2026f6fdc704e57&page=${pageNumber}\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          movies: json.results,\r\n          page: json.page\r\n        });\r\n      }); */\r\n  }\r\n\r\n  makeHttpRequestWithPage = async pageNumber => {\r\n    if (pageNumber <= 1) {\r\n      pageNumber = 1;\r\n    }\r\n    fetch(\"https://api.themoviedb.org/3/trending/movie/week?api_key=f37c16e288bd47f8c2026f6fdc704e57&page=\" + pageNumber)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          movies: json.results,\r\n          page: json.page,\r\n\r\n        });\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    let renderPageNumbers;\r\n    const pageNumbers = [];\r\n    if (this.state.total !== null) {\r\n      for (let i = 1; i <= 5; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n\r\n      renderPageNumbers = pageNumbers.map(number => {\r\n        let classes = this.state.page === number ? 'activePage' : 'pages';\r\n\r\n        return (\r\n          <li class=\"page-item\">\r\n            <a className={classes} onClick={() => this.makeHttpRequestWithPage(number)}>\r\n              <span key={number}>{number}</span>\r\n            </a>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n    /*<div className=\"row row-cols-1 row-cols-md-3 p-3\">{this.state.movies.map((film, idx) =>\r\n            <Movie key={idx} movie={film}></Movie>\r\n          )}\r\n          </div>\r\n          onClick={this.filterMovie}\r\n          <div className=\"row row-cols-1 row-cols-md-3 p-3\">{this.state.movies.filter(movie=>movie.original_title.includes(this.state.filter|| movie.title.includes(this.state.filter))).map((film, idx) =>\r\n            <Movie key={idx} movie={film}></Movie>\r\n          )}\r\n          </div>*/\r\n    return (\r\n      <div>\r\n\r\n        <div className=\"cosPagina\">\r\n          <div className=\"row row-cols-1 row-cols-md-5 p-3\">{this.state.movies.map((film, idx) =>\r\n            <Movie key={idx} movie={film}></Movie>\r\n          )}\r\n          </div>\r\n          <ul class=\"pagination centerPagination\">\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link pages\" onClick={() => this.makeHttpRequestWithPage((this.state.page - 1))} aria-label=\"Previous\">\r\n                <span aria-hidden=\"true\">«</span>\r\n              </a>\r\n            </li>\r\n\r\n            {renderPageNumbers}\r\n\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link pages\" aria-label=\"Next\" onClick={() => this.makeHttpRequestWithPage((this.state.page + 1))}>\r\n                <span aria-hidden=\"true\">»</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <br></br><br></br><br></br>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Movie extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n\r\n  render() {\r\n    let info = this.props.movie;\r\n    //console.log('https://image.tmdb.org/t/p/w500' + info.backdrop_path);\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"col mb-4\">\r\n\r\n        <Link to={'/movie/' + info.id}>\r\n          <div className=\"card bgCard\" id={info.id}>\r\n            <img src={'https://image.tmdb.org/t/p/w500' + info.backdrop_path} className=\"card-img-top\" alt={info.original_title}></img>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title title\">{info.original_title}</h5>\r\n              <p className=\"card-text\">{info.overview}</p>\r\n              <p className=\"card-text\"><small className=\"text-muted\">{info.release_date}</small></p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass MovieDetails extends React.Component {\r\n  //https://api.themoviedb.org/3/movie/${this.props.movieID}?api_key=f37c16e288bd47f8c2026f6fdc704e57\r\n  constructor({ match, location }) {\r\n    super();\r\n    this.state = {\r\n      img: [],\r\n      idFilm: match.params.movieID,\r\n      title: [],\r\n      genres: [],\r\n      overview: [],\r\n      homepage: [],\r\n      production_companies: [],\r\n      production_countries: []\r\n    }\r\n    console.log(JSON.stringify(match));\r\n\r\n  }\r\n  /*constructor() {\r\n    super();\r\n    this.state = {\r\n      img: [],\r\n      title: \"\"\r\n\r\n    }\r\n    \r\n  }*/\r\n\r\n  componentDidMount() {\r\n    let url = \"https://api.themoviedb.org/3/movie/\" + this.state.idFilm + \"?api_key=f37c16e288bd47f8c2026f6fdc704e57\";\r\n    console.log(url);\r\n    console.log(this.state.idFilm);\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          img: json.backdrop_path,\r\n          title: json.original_title,\r\n          genres: json.genres,\r\n          overview: json.overview,\r\n          homepage: json.homepage,\r\n          production_companies: json.production_companies,\r\n          production_countries: json.production_countries\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"cosPagina\">\r\n        <div class=\"row featurette mt-2 px-3\">\r\n          <div class=\"col-md-7 order-md-2\">\r\n            <a class=\"btn btn-danger my-4 my-sm-2 navbar-form\" href=\"/\" type=\"button\" >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n                <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\r\n              </svg>\r\n                 Back</a>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row featurette mt-2 px-3\">\r\n          <div class=\"col-md-7 order-md-2\">\r\n            <h2 class=\"featurette-heading textWhite title\">{this.state.title}</h2>\r\n            <p class=\"lead\">{this.state.overview}</p>\r\n            <br></br><br></br><br></br>\r\n            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n              <p>Genres: {this.state.genres.map((genre, idx) =>\r\n                <Genre key={idx} genreName={genre}></Genre>\r\n              )}\r\n              </p>\r\n              <a type=\"button\" href={this.state.homepage} class=\"btn btn-outline-info\">Movie Homepage</a>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-5 order-md-2\">\r\n            <img src={'https://image.tmdb.org/t/p/w500' + this.state.img} className=\"imgStyle\"></img>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n        <hr class=\"featurette-divider hrStyle\"></hr>\r\n        <h4 class=\"ml-5 pl-5 featurette-heading textWhite title\">Production Companies</h4>\r\n        <div class=\"row m-2 justify-content-center\">\r\n\r\n          {this.state.production_companies.map((company, idx) => <ProductionCompanies key={idx} companyInfo={company}></ProductionCompanies>)}\r\n\r\n        </div>\r\n        <hr class=\"featurette-divider hrStyle\"></hr>\r\n        <h4 class=\"ml-5 pl-5 featurette-heading textWhite title\">Production Coutries</h4>\r\n        <div class=\"m-2\">\r\n\r\n          {this.state.production_countries.map((country, idx) => <ProductionCountries key={idx} countryName={country}></ProductionCountries>)}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Genre extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    let info = this.props.genreName;\r\n\r\n\r\n\r\n    return (\r\n\r\n      <em>|{info.name}| </em>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass ProductionCompanies extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    let info = this.props.companyInfo;\r\n\r\n\r\n\r\n    return (\r\n      <div class=\"col-lg-3 bgProdCard m-1 p-3\">\r\n        <img class=\"bd-placeholder-img\" src={'https://image.tmdb.org/t/p/w500' + info.logo_path} width=\"100\"></img>\r\n        <h5 class=\"pt-3\">{info.name}</h5>\r\n        <p><strong>Country: </strong>{info.origin_country}</p>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass ProductionCountries extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    let info = this.props.countryName;\r\n\r\n\r\n\r\n    return (\r\n      <p class=\"center\"><em>|{info.name}| </em></p>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass MovieSearch extends React.Component {\r\n  //https://api.themoviedb.org/3/movie/${this.props.movieID}?api_key=f37c16e288bd47f8c2026f6fdc704e57\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      movies: [],\r\n      page: 1,\r\n\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.makeHttpRequestWithPage(1);\r\n    /*fetch(\"https://api.themoviedb.org/3/trending/movie/week?api_key=f37c16e288bd47f8c2026f6fdc704e57&page=${pageNumber}\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          movies: json.results,\r\n          page: json.page\r\n        });\r\n      }); */\r\n  }\r\n\r\n  makeHttpRequestWithPage = async pageNumber => {\r\n    if (pageNumber <= 1) {\r\n      pageNumber = 1;\r\n    }\r\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=f37c16e288bd47f8c2026f6fdc704e57&language=en-US&query=${this.props.match.params.query}&page=` + pageNumber)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        this.setState({\r\n          movies: json.results,\r\n          page: json.page,\r\n\r\n        });\r\n      });\r\n\r\n  }\r\n  render() {\r\n\r\n    let renderPageNumbers;\r\n    const pageNumbers = [];\r\n    if (this.state.total !== null) {\r\n      for (let i = 1; i <= 5; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n\r\n      renderPageNumbers = pageNumbers.map(number => {\r\n        let classes = this.state.page === number ? 'activePage' : 'pages';\r\n\r\n        return (\r\n          <li class=\"page-item\">\r\n            <a className={classes} onClick={() => this.makeHttpRequestWithPage(number)}>\r\n              <span key={number}>{number}</span>\r\n            </a>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n    /*<div className=\"row row-cols-1 row-cols-md-3 p-3\">{this.state.movies.map((film, idx) =>\r\n            <Movie key={idx} movie={film}></Movie>\r\n          )}\r\n          </div>\r\n          onClick={this.filterMovie}\r\n          <div className=\"row row-cols-1 row-cols-md-3 p-3\">{this.state.movies.filter(movie=>movie.original_title.includes(this.state.filter|| movie.title.includes(this.state.filter))).map((film, idx) =>\r\n            <Movie key={idx} movie={film}></Movie>\r\n          )}\r\n          </div>*/\r\n    return (\r\n      <div>\r\n\r\n        <div className=\"cosPagina\">\r\n          <div class=\"row featurette mt-2 px-3\">\r\n            <div class=\"col-md-2 order-md-1\">\r\n              <a class=\"btn btn-danger my-4 my-sm-2 navbar-form\" href=\"/\" type=\"button\" >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n                  <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\r\n                </svg>\r\n                 Back</a>\r\n            </div>\r\n            <div class=\"col-md-10 order-md-2 vertCenter\">\r\n              <h5 class=\"results\">Results for: {this.props.match.params.query}</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-5 p-3\">{this.state.movies.map((film, idx) =>\r\n            <Movie key={idx} movie={film}></Movie>\r\n          )}\r\n          </div>\r\n          <ul class=\"pagination centerPagination\">\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link pages\" onClick={() => this.makeHttpRequestWithPage((this.state.page - 1))} aria-label=\"Previous\">\r\n                <span aria-hidden=\"true\">«</span>\r\n              </a>\r\n            </li>\r\n\r\n            {renderPageNumbers}\r\n\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link pages\" aria-label=\"Next\" onClick={() => this.makeHttpRequestWithPage((this.state.page + 1))}>\r\n                <span aria-hidden=\"true\">»</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n\r\n        <footer className=\"footer mt-auto py-3 bg-dark\">\r\n          <div className=\"container\">\r\n            <span className=\"text-muted footerText\">Àlex Burdoy, Josep Vílchez i Martí Peña</span>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  /*render() {\r\n    console.log(this.props.match.params.query);\r\n    return (\r\n\r\n      <div className=\"col mb-4\">\r\n\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }*/\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n\r\n/*<div class=\"col mb-4\">\r\n<div class=\"card\" id=\"movie' + element.id + '\">\r\n<img src=\"https://image.tmdb.org/t/p/w500' + element.backdrop_path + '\" class=\"card-img-top\" alt=\"' + element.original_title + '\">\r\n<div class=\"card-body\"><h5 class=\"card-title\">' + element.original_title + '\r\n</h5><p class=\"card-text\">' + element.overview + '</p>\r\n<p class=\"card-text\"><small class=\"text-muted\">' + element.release_date + '</small>\r\n</p><p class=\"card-text\"><small class=\"text-muted\">Click inside the card to get movie details</small>\r\n</p></div></div></div>*/\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":16},{"ruleId":"32","severity":1,"message":"36","line":7,"column":3,"nodeType":"34","messageId":"35","endLine":7,"endColumn":9},{"ruleId":"37","severity":1,"message":"38","line":124,"column":13,"nodeType":"39","endLine":124,"endColumn":89},{"ruleId":"37","severity":1,"message":"38","line":150,"column":15,"nodeType":"39","endLine":150,"endColumn":132},{"ruleId":"37","severity":1,"message":"38","line":158,"column":15,"nodeType":"39","endLine":158,"endColumn":128},{"ruleId":"40","severity":1,"message":"41","line":282,"column":13,"nodeType":"39","endLine":282,"endColumn":96},{"ruleId":"40","severity":1,"message":"41","line":336,"column":9,"nodeType":"39","endLine":336,"endColumn":110},{"ruleId":"37","severity":1,"message":"38","line":416,"column":13,"nodeType":"39","endLine":416,"endColumn":89},{"ruleId":"37","severity":1,"message":"38","line":454,"column":15,"nodeType":"39","endLine":454,"endColumn":132},{"ruleId":"37","severity":1,"message":"38","line":462,"column":15,"nodeType":"39","endLine":462,"endColumn":128},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]